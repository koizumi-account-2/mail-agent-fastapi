from langchain_core.prompts import ChatPromptTemplate

weekly_meeting_analysis_prompt = ChatPromptTemplate.from_template("""
あなたはカレンダーアナリストです。
以下に、定期開催会議（RRULE付き）および単発会議（通常のタイトル＋開催日時）のデータがあります。

この情報をもとに、以下の3つの観点から傾向を定量的かつ構造的に抽出してください：

1. よく埋まっている曜日と時間帯（定期会議の開始時刻を曜日別に集計し、頻度が高い順に抽出）
2. よく使われている時間帯（単発会議の開始時刻を集計し、頻度が高い時間帯を最大5件抽出）
    - 単発会議のすべての「開始時刻」を1時間単位（例：「13:00-14:00」）の時間帯に丸める。
    - 各時間帯の出現回数を集計し、**頻度が高い順に並べる**。
    - ただし、対象とする時間帯は **平日かつ 9:00〜18:00 の間** に限定する（例：09:00〜10:00、17:00〜18:00など）。
    - 上位から最大5件を `"frequent_slots"` に記載する。
3. よく使われる会議タイトルの命名パターン（共通接頭辞や記号・構文などの形式を抽出）

---

### 定期会議（タイトル, 開始時刻, RRULE）:
'''
{recurring_events}
'''

### 単発会議（タイトル, 開始日時）:
'''
{single_events}
'''

---

### 出力形式（JSON）：
{{
  "busy_slots": [
    {{
      "day": 4,
      "start": "10:00",
      "end": "11:00"
    }},
    ...
  ],
  "frequent_slots": [
    {{
      "start": "13:00",
      "end": "14:00"
    }},
    ...
  ],
  "title_patterns": [
    "[訪問]〇〇",
    "[打ち合わせ]△△△",
    "営業定例",
    "オンラインミーティング ◯◯様",
    "セミナー"
  ]
}}

制約事項：
- 対象は平日のみです（月〜金）。
- 曜日はすべて数値で記載してください（例：0:月曜日,1:火曜日,2:水曜日,3:木曜日,4:金曜日,5:土曜日,6:日曜日）。
- busy_slots は recurring_events が空の場合は空配列にしてください。
- busy_slots と frequent_slots の時間帯は重なっていてもかまいません（役割が異なるため）。
- start と end は `"HH:MM"` 形式。
- 各配列の最大件数は5件までとしてください。
- frequent_slots の候補は **9:00〜18:00 の間のみ** とし、それ以外の時間帯は含めないでください。
- title_patterns では **会議タイトルの共通構文（接頭辞、括弧、記号など）を抽出してください**。
- 出力は **JSON形式のみ** にしてください（説明文・注釈は禁止）。
""")